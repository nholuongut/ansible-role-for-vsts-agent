---
- name: Install centos-release-scl-rh (CentOS only)
  package:
    name: centos-release-scl-rh
    state: present
  become: true
  when: ansible_distribution == 'CentOS'

- name: Enables SCL (RHEL only)
  command: "yum-config-manager --enable rhel-server-rhscl-{{ ansible_distribution_major_version }}-rpms"
  become: true
  when: ansible_distribution == 'RedHat'

- name: Install required software for vsts-agent
  yum:
    name:
      - icu
      - libunwind
      - git
      - python-pip
    state: installed
  become: true
  tags:
    - pkg

- name: Pip install pexpect (we need a new-enough version that isn't packaged in redhat 7.x
  pip:
    name: pexpect
    state: present
  tags:
    - pkg
    - pexpect

- name: Include user tasks
  include_tasks: common/user.yml
  when: 
    - dryrun is not defined
    - vsts_action == 'install'
  tags:
    - config

- name: Fetch latest downloadurl if variable vsts_server_url is not defined
  shell: "curl -s https://api.github.com/repos/Microsoft/vsts-agent/releases/latest | jq -r .assets[].browser_download_url | grep rhel"
  delegate_to: localhost
  register: githubapi_downloadurl_output
  when: vsts_agent_fullurl is not defined
  tags:
    - fetch

- name: Register githubapi_downloadurl_output as fact in variable vsts_agent_fullurl
  set_fact:
    vsts_agent_fullurl: "{{ githubapi_downloadurl_output.stdout_lines[0] }}"
  when: vsts_agent_fullurl is not defined
  tags:
    - fetch

- name: Download and unarchive
  unarchive:
    dest: "{{vsts_agentfolder}}"
    src: "{{vsts_agent_fullurl}}"
    remote_src: true
    owner: "{{vsts_agent_user}}"
    group: "{{vsts_agent_user}}"
    creates: "{{vsts_agentfolder}}/config.sh"
  tags:
    - fetch
    - unzip

- name: Include configure vsts-agent tasks
  include_tasks: configure.yml
  when: dryrun is not defined
  tags:
    - config

- name: Install systemd service file
  template:
    src: vsts-agent.service.j2
    dest: /etc/systemd/system/vsts-agent.service
    mode: "0755"
  become: true

- name: Enable and start vsts-agent service
  systemd:
    name: vsts-agent
    enabled: yes
    state: started
    daemon_reload: yes
  become: true
  when: dryrun is not defined
  tags:
    - service

- name: Check service status
  command: systemctl status vsts-agent
  changed_when: False

- name: Create apps directory
  file:
    path: "{{ vsts_apps_dir }}"
    owner: "{{ vsts_agent_user }}"
    group: "{{ vsts_agent_user }}"
    mode: 0755
    state: directory